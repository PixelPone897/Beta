using UnityEditor;
using UnityEngine;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;

public class CreateFolders : MonoBehaviour
{
    [MenuItem("Assets/Create Default Folders")]
    public static void CreateDefaultFolders()
    {


        string[] parentFolders =
        {
            "Animations",
            "Audio",
            "Editor",
            "Fonts",
            "Materials",
            "Models",
            "Prefabs",
            "Scenes",
            "Settings",
            "ScriptableObjects",
            "Scripts",
            "Sprites",
            "Textures",
        };

        string[] audioSubFolders =
        {
            "Music",
            "SFX",
        };

        foreach(string folder in parentFolders)
        {
            string path = Path.Combine("Assets", folder);
            if (!AssetDatabase.IsValidFolder(path))
            {
                AssetDatabase.CreateFolder("Assets", folder);
                Debug.Log($"Created folder: {path}");
            }
            else
            {
                Debug.Log($"Folder already exists: {path}");
            }
        }

        foreach(string subFolder in audioSubFolders)
        {
            string path = Path.Combine("Assets", "Audio", subFolder);
            if (!AssetDatabase.IsValidFolder(path))
            {
                AssetDatabase.CreateFolder("Assets/Audio", subFolder);
                Debug.Log($"Created folder: {path}");
            }
            else
            {
                Debug.Log($"Folder already exists: {path}");
            }
        }

        Debug.Log("Default folders created successfully.");

        Debug.Log("Moving CreateFolders script to Editor folder...");
        AssetDatabase.MoveAsset("Assets/CreateFolders.cs", "Assets/Editor/CreateFolders.cs");
        AssetDatabase.Refresh();

        Debug.Log("You can now create a default .gitignore file by using the menu item 'Assets/Create Default GitIgnore File'.");
    }

    [MenuItem("Assets/Create Default GitIgnore File")]
    public static void CreateGitIgnore()
    {
        string gitIgnoreString = "# This .gitignore file should be placed at the root of your Unity project directory\r\n#\r\n# Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore\r\n#\r\n.utmp/\r\n/[Ll]ibrary/\r\n/[Tt]emp/\r\n/[Oo]bj/\r\n/[Bb]uild/\r\n/[Bb]uilds/\r\n/[Ll]ogs/\r\n/[Uu]ser[Ss]ettings/\r\n*.log\r\n\r\n# By default unity supports Blender asset imports, *.blend1 blender files do not need to be commited to version control.\r\n*.blend1\r\n*.blend1.meta\r\n\r\n# MemoryCaptures can get excessive in size.\r\n# They also could contain extremely sensitive data\r\n/[Mm]emoryCaptures/\r\n\r\n# Recordings can get excessive in size\r\n/[Rr]ecordings/\r\n\r\n# Uncomment this line if you wish to ignore the asset store tools plugin\r\n# /[Aa]ssets/AssetStoreTools*\r\n\r\n# Autogenerated Jetbrains Rider plugin\r\n/[Aa]ssets/Plugins/Editor/JetBrains*\r\n\r\n# Visual Studio cache directory\r\n.vs/\r\n\r\n# Gradle cache directory\r\n.gradle/\r\n\r\n# Autogenerated VS/MD/Consulo solution and project files\r\nExportedObj/\r\n.consulo/\r\n*.csproj\r\n*.unityproj\r\n*.sln\r\n*.suo\r\n*.tmp\r\n*.user\r\n*.userprefs\r\n*.pidb\r\n*.booproj\r\n*.svd\r\n*.pdb\r\n*.mdb\r\n*.opendb\r\n*.VC.db\r\n\r\n# Unity3D generated meta files\r\n*.pidb.meta\r\n*.pdb.meta\r\n*.mdb.meta\r\n\r\n# Unity3D generated file on crash reports\r\nsysinfo.txt\r\n\r\n# Mono auto generated files\r\nmono_crash.*\r\n\r\n# Builds\r\n*.apk\r\n*.aab\r\n*.unitypackage\r\n*.unitypackage.meta\r\n*.app\r\n\r\n# Crashlytics generated file\r\ncrashlytics-build.properties\r\n\r\n# Packed Addressables\r\n/[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*\r\n\r\n# Temporary auto-generated Android Assets\r\n/[Aa]ssets/[Ss]treamingAssets/aa.meta\r\n/[Aa]ssets/[Ss]treamingAssets/aa/*\r\n\r\n# Visual Scripting auto-generated files\r\n/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Flow/UnitOptions.db\r\n/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Flow/UnitOptions.db.meta\r\n/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Core/Property Providers\r\n/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Core/Property Providers.meta";
        string parentDirectory = Directory.GetParent("Assets").FullName;
        if(File.Exists(Path.Combine(parentDirectory, ".gitignore")))
        {
            Debug.Log("A .gitignore file already exists in the parent directory. Please delete it if you want to create a new one.");
        }
        else
        {
            File.WriteAllText(Path.Combine(parentDirectory, ".gitignore"), gitIgnoreString);
            Debug.Log(".gitignore file created successfully in the parent directory.");
        }
    }
}